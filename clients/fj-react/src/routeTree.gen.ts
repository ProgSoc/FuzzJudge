/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProblemsRouteImport } from './routes/problems'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LeaderboardRouteImport } from './routes/leaderboard'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProblemsSlugRouteImport } from './routes/problems/$slug'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminTeamsRouteImport } from './routes/admin/teams'
import { Route as AdminSubmissionsRouteImport } from './routes/admin/submissions'
import { Route as AdminClockRouteImport } from './routes/admin/clock'
import { Route as AdminUsersCreateRouteImport } from './routes/admin/users/create'
import { Route as AdminTeamsCreateRouteImport } from './routes/admin/teams/create'
import { Route as AdminSubmissionsSubmissionRouteImport } from './routes/admin/submissions/submission'

const ProblemsRoute = ProblemsRouteImport.update({
  id: '/problems',
  path: '/problems',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LeaderboardRoute = LeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProblemsSlugRoute = ProblemsSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => ProblemsRoute,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminRoute,
} as any)
const AdminTeamsRoute = AdminTeamsRouteImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSubmissionsRoute = AdminSubmissionsRouteImport.update({
  id: '/submissions',
  path: '/submissions',
  getParentRoute: () => AdminRoute,
} as any)
const AdminClockRoute = AdminClockRouteImport.update({
  id: '/clock',
  path: '/clock',
  getParentRoute: () => AdminRoute,
} as any)
const AdminUsersCreateRoute = AdminUsersCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AdminUsersRoute,
} as any)
const AdminTeamsCreateRoute = AdminTeamsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AdminTeamsRoute,
} as any)
const AdminSubmissionsSubmissionRoute =
  AdminSubmissionsSubmissionRouteImport.update({
    id: '/submission',
    path: '/submission',
    getParentRoute: () => AdminSubmissionsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/leaderboard': typeof LeaderboardRoute
  '/login': typeof LoginRoute
  '/problems': typeof ProblemsRouteWithChildren
  '/admin/clock': typeof AdminClockRoute
  '/admin/submissions': typeof AdminSubmissionsRouteWithChildren
  '/admin/teams': typeof AdminTeamsRouteWithChildren
  '/admin/users': typeof AdminUsersRouteWithChildren
  '/problems/$slug': typeof ProblemsSlugRoute
  '/admin/submissions/submission': typeof AdminSubmissionsSubmissionRoute
  '/admin/teams/create': typeof AdminTeamsCreateRoute
  '/admin/users/create': typeof AdminUsersCreateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/leaderboard': typeof LeaderboardRoute
  '/login': typeof LoginRoute
  '/problems': typeof ProblemsRouteWithChildren
  '/admin/clock': typeof AdminClockRoute
  '/admin/submissions': typeof AdminSubmissionsRouteWithChildren
  '/admin/teams': typeof AdminTeamsRouteWithChildren
  '/admin/users': typeof AdminUsersRouteWithChildren
  '/problems/$slug': typeof ProblemsSlugRoute
  '/admin/submissions/submission': typeof AdminSubmissionsSubmissionRoute
  '/admin/teams/create': typeof AdminTeamsCreateRoute
  '/admin/users/create': typeof AdminUsersCreateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/leaderboard': typeof LeaderboardRoute
  '/login': typeof LoginRoute
  '/problems': typeof ProblemsRouteWithChildren
  '/admin/clock': typeof AdminClockRoute
  '/admin/submissions': typeof AdminSubmissionsRouteWithChildren
  '/admin/teams': typeof AdminTeamsRouteWithChildren
  '/admin/users': typeof AdminUsersRouteWithChildren
  '/problems/$slug': typeof ProblemsSlugRoute
  '/admin/submissions/submission': typeof AdminSubmissionsSubmissionRoute
  '/admin/teams/create': typeof AdminTeamsCreateRoute
  '/admin/users/create': typeof AdminUsersCreateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/leaderboard'
    | '/login'
    | '/problems'
    | '/admin/clock'
    | '/admin/submissions'
    | '/admin/teams'
    | '/admin/users'
    | '/problems/$slug'
    | '/admin/submissions/submission'
    | '/admin/teams/create'
    | '/admin/users/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/leaderboard'
    | '/login'
    | '/problems'
    | '/admin/clock'
    | '/admin/submissions'
    | '/admin/teams'
    | '/admin/users'
    | '/problems/$slug'
    | '/admin/submissions/submission'
    | '/admin/teams/create'
    | '/admin/users/create'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/leaderboard'
    | '/login'
    | '/problems'
    | '/admin/clock'
    | '/admin/submissions'
    | '/admin/teams'
    | '/admin/users'
    | '/problems/$slug'
    | '/admin/submissions/submission'
    | '/admin/teams/create'
    | '/admin/users/create'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  LeaderboardRoute: typeof LeaderboardRoute
  LoginRoute: typeof LoginRoute
  ProblemsRoute: typeof ProblemsRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/problems': {
      id: '/problems'
      path: '/problems'
      fullPath: '/problems'
      preLoaderRoute: typeof ProblemsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/leaderboard': {
      id: '/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/problems/$slug': {
      id: '/problems/$slug'
      path: '/$slug'
      fullPath: '/problems/$slug'
      preLoaderRoute: typeof ProblemsSlugRouteImport
      parentRoute: typeof ProblemsRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/teams': {
      id: '/admin/teams'
      path: '/teams'
      fullPath: '/admin/teams'
      preLoaderRoute: typeof AdminTeamsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/submissions': {
      id: '/admin/submissions'
      path: '/submissions'
      fullPath: '/admin/submissions'
      preLoaderRoute: typeof AdminSubmissionsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/clock': {
      id: '/admin/clock'
      path: '/clock'
      fullPath: '/admin/clock'
      preLoaderRoute: typeof AdminClockRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/users/create': {
      id: '/admin/users/create'
      path: '/create'
      fullPath: '/admin/users/create'
      preLoaderRoute: typeof AdminUsersCreateRouteImport
      parentRoute: typeof AdminUsersRoute
    }
    '/admin/teams/create': {
      id: '/admin/teams/create'
      path: '/create'
      fullPath: '/admin/teams/create'
      preLoaderRoute: typeof AdminTeamsCreateRouteImport
      parentRoute: typeof AdminTeamsRoute
    }
    '/admin/submissions/submission': {
      id: '/admin/submissions/submission'
      path: '/submission'
      fullPath: '/admin/submissions/submission'
      preLoaderRoute: typeof AdminSubmissionsSubmissionRouteImport
      parentRoute: typeof AdminSubmissionsRoute
    }
  }
}

interface AdminSubmissionsRouteChildren {
  AdminSubmissionsSubmissionRoute: typeof AdminSubmissionsSubmissionRoute
}

const AdminSubmissionsRouteChildren: AdminSubmissionsRouteChildren = {
  AdminSubmissionsSubmissionRoute: AdminSubmissionsSubmissionRoute,
}

const AdminSubmissionsRouteWithChildren =
  AdminSubmissionsRoute._addFileChildren(AdminSubmissionsRouteChildren)

interface AdminTeamsRouteChildren {
  AdminTeamsCreateRoute: typeof AdminTeamsCreateRoute
}

const AdminTeamsRouteChildren: AdminTeamsRouteChildren = {
  AdminTeamsCreateRoute: AdminTeamsCreateRoute,
}

const AdminTeamsRouteWithChildren = AdminTeamsRoute._addFileChildren(
  AdminTeamsRouteChildren
)

interface AdminUsersRouteChildren {
  AdminUsersCreateRoute: typeof AdminUsersCreateRoute
}

const AdminUsersRouteChildren: AdminUsersRouteChildren = {
  AdminUsersCreateRoute: AdminUsersCreateRoute,
}

const AdminUsersRouteWithChildren = AdminUsersRoute._addFileChildren(
  AdminUsersRouteChildren
)

interface AdminRouteChildren {
  AdminClockRoute: typeof AdminClockRoute
  AdminSubmissionsRoute: typeof AdminSubmissionsRouteWithChildren
  AdminTeamsRoute: typeof AdminTeamsRouteWithChildren
  AdminUsersRoute: typeof AdminUsersRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminClockRoute: AdminClockRoute,
  AdminSubmissionsRoute: AdminSubmissionsRouteWithChildren,
  AdminTeamsRoute: AdminTeamsRouteWithChildren,
  AdminUsersRoute: AdminUsersRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface ProblemsRouteChildren {
  ProblemsSlugRoute: typeof ProblemsSlugRoute
}

const ProblemsRouteChildren: ProblemsRouteChildren = {
  ProblemsSlugRoute: ProblemsSlugRoute,
}

const ProblemsRouteWithChildren = ProblemsRoute._addFileChildren(
  ProblemsRouteChildren
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  LeaderboardRoute: LeaderboardRoute,
  LoginRoute: LoginRoute,
  ProblemsRoute: ProblemsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
