extend type Subscription {
	clock: Clock!
}

extend type Mutation {
	holdClock: Clock!
	releaseClock(extendDuration: Boolean): Clock!
	adjustStartTime(startTime: DateTime!, keepDuration: Boolean): Clock!
	adjustFinishTime(finishTime: DateTime!): Clock!
}

type Clock {
	start: DateTime!
	finish: DateTime!
	hold: DateTime
}

enum ClockStatus {
	before
	after
	hold
	freeze
	running
}

directive @clock(
	disallowedStatus: [ClockStatus!]! = [before, after, freeze, hold]
) on FIELD_DEFINITION
