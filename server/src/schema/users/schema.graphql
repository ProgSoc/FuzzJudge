extend type Query {
	users: [User!]!
	user(id: Int!): User!
	me: User!
}

extend type Mutation {
	createUser(logn: String!, role: UserRole!, teamId: Int): User!
	updateUser(id: Int!, role: UserRole, teamId: Int): User!
	deleteUser(id: Int!): User!
}

enum UserRole {
	competitor
	admin
}

type User {
	id: Int!
	role: UserRole!
	teamId: Int
	team: Team
	logn: String!
}

directive @auth(role: UserRole = competitor) on FIELD_DEFINITION | OBJECT
