extend type Query {
	problems: [Problem!]!
	problem(slug: String!): Problem!
}

extend type Mutation {
	judge(slug: String!, code: String!, output: String!): JudgeOutput!
	getFuzz(slug: String!): String!
}

union JudgeOutput = JudgeSuccessOutput | JudgeErrorOutput

type JudgeSuccessOutput {
	message: String!
}

type JudgeErrorOutput {
	message: String!
	errors: String!
}

type Problem {
	slug: String!
	icon: String!
	name: String!
	brief: String!
	difficulty: Int! # 1-3
	points: Int!
	instructions: String!
	solved: Boolean!
}
