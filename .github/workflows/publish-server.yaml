name: Release
on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Test Bun
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
    steps:
      # ...
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      # run any `bun` or `bunx` command
      - run: bun install
      - run: bun test
      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          # this npm script triggers `changeset publish`
          publish: bun changeset tag
          createGithubReleases: true
  
  publish-server-pkg:
    name: Publish Bun
    needs: release
    if: needs.release.outputs.published == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - name: Setup NPM
        uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org/'
          scope: '@progsoc'
          token: ${{ secrets.NPM_TOKEN }}
      # run any `bun` or `bunx` command
      - run: bun install
      - name: Build JS
        run: bun run -F @progsoc/* build
      - run: cd server && bun publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
  publish-docker:
    name: Publish Docker Images
    needs: release
    if: needs.release.outputs.published == 'true'
    strategy:
      fail-fast: true
      matrix:
        package: ${{ fromJson(needs.release.outputs.publishedPackages) }}
    uses: ./.github/workflows/build-image.yaml
    with:
      version: ${{ matrix.package.version}}
   