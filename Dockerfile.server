FROM oven/bun:1-alpine AS base
WORKDIR /app

# install dependencies into temp directory
# this will cache them and speed up future builds
FROM base AS install
RUN mkdir -p /temp/dev
COPY package.json bun.lockb /temp/dev/
COPY server/package.json /temp/dev/server/package.json
RUN cd /temp/dev && bun install --filter "./server"


# install with --production (exclude devDependencies)
RUN mkdir -p /temp/prod
COPY package.json bun.lockb /temp/prod/
COPY server/package.json /temp/prod/server/package.json
RUN cd /temp/prod && bun install --filter "./server"


# copy node_modules from temp directory
# then copy all (non-ignored) project files into the image
FROM base AS prerelease
COPY --from=install /temp/dev/node_modules node_modules
COPY . .

RUN bun run --filter "./server" build 



FROM base as release

# Install Deno
RUN apk add --no-cache deno
# Install Python
RUN apk add --no-cache python3 py3-pip
# Install Python packages
RUN apk add --no-cache py3-numpy
# Install Rust
RUN apk add --no-cache rust cargo
# Install Java
RUN apk add --no-cache openjdk11
# Install Go
RUN apk add --no-cache go
# Install Ruby
RUN apk add --no-cache ruby

COPY --from=install /temp/prod/node_modules node_modules
COPY --from=prerelease /app/server/dist/index.js .
COPY --from=prerelease /app/server/drizzle .
COPY --from=prerelease /app/server/package.json .

ARG BASE_PATH
# Set the environment variable for the backend URL
ENV BASE_PATH=$BASE_PATH
ENV NODE_ENV=production
ENV DATABASE_URL=/competition/comp.db

USER bun

# Expose the port the app runs on
EXPOSE 1989

ENTRYPOINT [ "bun", "run", "index.js", "/competition" ]